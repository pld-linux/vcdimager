--- vcdimager-0.7.20/lib/info.c.orig	2004-02-08 18:57:11.000000000 +0100
+++ vcdimager-0.7.20/lib/info.c	2004-12-05 20:45:08.428008688 +0100
@@ -1311,9 +1311,9 @@
   
   /* CdIo tracks start at 1 rather than 0. */
   if (cdio_get_track_msf(obj->img, track_num+1, &msf)) {
-    *min   = from_bcd8(msf.m);
-    *sec   = from_bcd8(msf.s);
-    *frame = from_bcd8(msf.f);
+    *min   = cdio_from_bcd8(msf.m);
+    *sec   = cdio_from_bcd8(msf.s);
+    *frame = cdio_from_bcd8(msf.f);
     return 0;
   }
   
@@ -1806,7 +1806,7 @@
   }
 
   if (obj->vcd_type == VCD_TYPE_SVCD || obj->vcd_type == VCD_TYPE_HQVCD) {
-    statbuf = iso9660_fs_stat (obj->img, "MPEGAV", true);
+    statbuf = iso9660_fs_stat (obj->img, "MPEGAV");
     
     if (NULL != statbuf) {
       vcd_warn ("non compliant /MPEGAV folder detected!");
@@ -1814,7 +1814,7 @@
     }
     
 
-    statbuf = iso9660_fs_stat (obj->img, "SVCD/TRACKS.SVD;1", true);
+    statbuf = iso9660_fs_stat (obj->img, "SVCD/TRACKS.SVD;1");
     if (NULL != statbuf) {
       lsn_t lsn = statbuf->lsn;
       if (statbuf->size != ISO_BLOCKSIZE)
@@ -1836,7 +1836,7 @@
        iso9660_fs_readdir(img, "EXT", true) and then scanning for
        the files listed below.
     */
-    statbuf = iso9660_fs_stat (img, "EXT/PSD_X.VCD;1", true);
+    statbuf = iso9660_fs_stat (img, "EXT/PSD_X.VCD;1");
     if (NULL != statbuf) {
       lsn_t lsn        = statbuf->lsn;
       uint32_t secsize = statbuf->secsize;
@@ -1852,7 +1852,7 @@
         return VCDINFO_OPEN_ERROR;
     }
 
-    statbuf = iso9660_fs_stat (img, "EXT/LOT_X.VCD;1", true);
+    statbuf = iso9660_fs_stat (img, "EXT/LOT_X.VCD;1");
     if (NULL != statbuf) {
       lsn_t lsn        = statbuf->lsn;
       uint32_t secsize = statbuf->secsize;
@@ -1877,13 +1877,13 @@
        iso9660_fs_readdir(img, "SVCD", true) and then scanning for
        the files listed below.
     */
-    statbuf = iso9660_fs_stat (img, "MPEGAV", true);
+    statbuf = iso9660_fs_stat (img, "MPEGAV");
     if (NULL != statbuf) {
       vcd_warn ("non compliant /MPEGAV folder detected!");
       free(statbuf);
     }
     
-    statbuf = iso9660_fs_stat (img, "SVCD/TRACKS.SVD;1", true);
+    statbuf = iso9660_fs_stat (img, "SVCD/TRACKS.SVD;1");
     if (NULL == statbuf)
       vcd_warn ("mandatory /SVCD/TRACKS.SVD not found!");
     else {
@@ -1892,7 +1892,7 @@
       free(statbuf);
     }
     
-    statbuf = iso9660_fs_stat (img, "SVCD/SEARCH.DAT;1", true);
+    statbuf = iso9660_fs_stat (img, "SVCD/SEARCH.DAT;1");
     if (NULL == statbuf)
       vcd_warn ("mandatory /SVCD/SEARCH.DAT not found!");
     else {
@@ -1931,7 +1931,7 @@
     ;
   }
 
-  statbuf = iso9660_fs_stat (img, "EXT/SCANDATA.DAT;1", true);
+  statbuf = iso9660_fs_stat (img, "EXT/SCANDATA.DAT;1");
   if (statbuf != NULL) {
     lsn_t    lsn       = statbuf->lsn;
     uint32_t secsize   = statbuf->secsize;
--- vcdimager-0.7.20/frontends/cli/vcd-info.c.orig	2004-02-07 04:00:39.000000000 +0100
+++ vcdimager-0.7.20/frontends/cli/vcd-info.c	2004-12-05 20:47:11.654275448 +0100
@@ -207,14 +207,14 @@
     return PBC_VCD2_NOPE;
 
   img = vcdinfo_get_cd_image(obj);
-  statbuf = iso9660_fs_stat (img, "EXT/LOT_X.VCD;1", true);
+  statbuf = iso9660_fs_stat (img, "EXT/LOT_X.VCD;1");
   if (NULL == statbuf)
     return PBC_VCD2_NO_LOT_X;
   if (statbuf->size != ISO_BLOCKSIZE * LOT_VCD_SIZE) {
     ret_status = PBC_VCD2_BAD_LOT_SIZE;
   } else {
     free(statbuf);
-    statbuf = iso9660_fs_stat (img, "EXT/PSD_X.VCD;1", true);
+    statbuf = iso9660_fs_stat (img, "EXT/PSD_X.VCD;1");
     if (NULL != statbuf) {
       ret_status = PBC_VCD2_EXT;
     } else {
@@ -1184,8 +1184,7 @@
                                  ((vcdinfo_get_VCD_type(obj) == VCD_TYPE_SVCD 
                              || vcdinfo_get_VCD_type(obj) == VCD_TYPE_HQVCD)
                                   ? "/SVCD/PSD.SVD;1" 
-                                  : "/VCD/PSD.VCD;1"),
-                                 true);
+                                  : "/VCD/PSD.VCD;1"));
       if (NULL == statbuf)
         vcd_warn ("no PSD file entry found in ISO9660 fs");
       else {
--- vcdimager-0.7.20/frontends/xml/vcd_xml_rip.c.orig	2003-11-16 20:32:01.000000000 +0100
+++ vcdimager-0.7.20/frontends/xml/vcd_xml_rip.c	2004-12-05 20:48:05.477093136 +0100
@@ -781,7 +781,7 @@
 
   if (obj->vcd_type == VCD_TYPE_VCD2)
     {
-      statbuf = iso9660_fs_stat (img, "EXT/LOT_X.VCD;1", true);
+      statbuf = iso9660_fs_stat (img, "EXT/LOT_X.VCD;1");
       if (statbuf != NULL) {
 	extended = true;
 	_lot_vcd_sector = statbuf->lsn;
@@ -790,7 +790,7 @@
 
       free(statbuf);
       if (extended &&
-	  NULL != (statbuf = iso9660_fs_stat (img, "EXT/PSD_X.VCD;1", true))) {
+	  NULL != (statbuf = iso9660_fs_stat (img, "EXT/PSD_X.VCD;1"))) {
 	_psd_vcd_sector = statbuf->lsn;
 	_psd_size = statbuf->size;
 	free(statbuf);
